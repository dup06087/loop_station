from psonic import *
from random import choice

import time
import serial
from psonic import *

duration = [[], [], []]
duration0 = []
duration1 = []
duration2 = []
scale = [[], [], []]
scale0 = []
scale1 = []
scale2 = []
num = [0, 0, 0]
instrument = [0, 0, 0]

data0_list = [[], [], []]
data0_list0 = []

tick = Message()

@in_thread
def random_riff():
    use_synth(instrument[0])
    for i in range(num[0]):
        try:
            play(scale[0][i])
            sleep(float(duration[0][i]) / 1000)
        except:
            print("end")

@in_thread
def drums():
    use_synth(instrument[1])
    for i in range(num[1]):
        try:
            play(scale[1][i])
            sleep(float(duration[1][i]) / 1000)
        except:
            print("end")

# random_riff()


arduino = serial.Serial('COM3', 9600)

while (True):
    data = []
    data_get = ""

    ## 처음만 여기서 읽음
    other = True
    if other == True:
        data = arduino.readline().decode()

        for i in range(len(data)):
            data_get += data[i]
        data_get = data_get.strip()

        if (data_get == "mode changed mode_send_record"):
            other = False
        # elif (data_get == "mode changed mode_record"):
        #     print(data_get)
        # elif (data_get == "mode changed mode_select"):
        else:
            print(data_get)
            # print("Press btn (play) to select instrument or (0 or 1 or 2) to select (record number)")

    if (other == False):


        print(data_get)

        try:
            time.sleep(3)
            data0 = arduino.readline()
            data0 = data0.decode() ##decode하면 바이너리 없어짐
            while(True):
                if (data0.startswith("\x02") == False):
                    data0 = arduino.readline().decode()
                    print("data0 : ", data0)
                else:
                    break

            data0_list0 = data0.strip().split("\x02")
            print("here2 : ", data0_list0)
            del data0_list0[0]

            list_num = int(data0_list0[1].strip())
            num[list_num] = int(data0_list0[0].strip())
            instrument[list_num] = int(data0_list0[2].strip())

            print(num, list_num, instrument)


            data_list = arduino.readline().decode() ### data0_list
            print("data_list<< : " , data_list)
            for i in data_list.strip().split("\x02"):
                data0_list[list_num].append(i)

            del data0_list[list_num][0]

            print("here", data0_list[list_num])



            for i in range(num[list_num]):
                duration[list_num].append(data0_list[list_num][i])
            for i in range(num[list_num], 2 * num[list_num]):
                scale[list_num].append(data0_list[list_num][i])
            print("get well")

            for i in range(num[list_num]):
                if (scale[list_num][i] == "262"):
                    scale[list_num][i] = 60
                elif (scale[list_num][i] == "294"):
                    scale[list_num][i] = 62
                elif (scale[list_num][i] == "330"):
                    scale[list_num][i] = 64
                elif (scale[list_num][i] == "349"):
                    scale[list_num][i] = 65
                elif (scale[list_num][i] == "392"):
                    scale[list_num][i] = 67
                else:
                    scale[list_num][i] = 0
            print("list_num = ", list_num)
            print("duration = ", duration)
            print('scale = ', scale)
            print("num = : ", num)
            if (instrument[list_num] == 0):
                instrument[list_num] = PIANO
            elif (instrument[list_num] == 1):
                instrument[list_num] = PROPHET
            elif (instrument[list_num] == 2):
                instrument[list_num] = TRI
            elif (instrument[list_num] == 3):
                instrument[list_num] = NOISE
            elif (instrument[list_num] == 4):
                instrument[list_num] = DSAW

            print("instrument = ", instrument)

            use_synth(instrument[list_num])
            for i in range(num[list_num]):
                play(scale[list_num][i])
                sleep(float(duration[list_num][i]) / 1000)

            drums()
            random_riff()

        except:
            print("데이터 수신 안 됨")
            print("Press mode button")

        if (data == "mode changed mode_record") or (data == "mode changed mode_select"):
            other = True




